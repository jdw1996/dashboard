{"version":3,"sources":["Widget.tsx","MusicRecommender.tsx","bands.ts","util.ts","Covid19Update.tsx","FilePathConverter.tsx","SportsSchedule.tsx","TimeWasters.tsx","App.tsx","index.tsx"],"names":["Widget","props","className","title","children","listOfBands","split","listOfAotY","MusicName","music","name","starIndex1","search","starIndex2","slice","MusicRecommender","getRandomMusic","cap","idx","length","Math","floor","random","useState","rec","setRec","onClick","Covid19Update","href","FilePathConverter","unixPath","setUnixPath","windowsPath","setWindowsPath","htmlFor","type","id","value","onChange","e","currentTarget","path","ret","replace","unixToWindows","size","windowstoUnix","SportsSchedule","TimeWasters","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7eae15f.chunk.js","sourcesContent":["import React from 'react';\n\ntype WidgetProps = {\n  title: string;\n  children: React.ReactNode;\n  className: string;\n};\n\nexport function Widget(props: WidgetProps): JSX.Element {\n  return (\n    <div className={`widget ${props.className}`}>\n      <h2 className=\"widget-title\">{props.title}</h2>\n      <div className=\"widget-contents\">{props.children}</div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { Widget } from './Widget';\nimport { bands, aoty } from './bands';\nimport { randomInt } from './util';\n\ntype MusicNameProps = {\n  music: [string, boolean];\n};\n\nconst listOfBands = bands.split('\\n');\nconst listOfAotY = aoty.split('\\n');\n\nfunction MusicName({ music }: MusicNameProps): JSX.Element {\n  const [name, isAlbum] = music;\n  if (isAlbum) {\n    const starIndex1 = name.search(/\\*/u);\n    const starIndex2 = name.slice(starIndex1 + 1).search(/\\*/u) + starIndex1 + 1;\n    if (starIndex1 < 0 || starIndex2 < 0) {\n      return <span>{name}</span>;\n    }\n    return (\n      <span className=\"aoty\">\n        {name.slice(0, starIndex1)}\n        <em>{name.slice(starIndex1 + 1, starIndex2)}</em>\n        {name.slice(starIndex2 + 1)}\n      </span>\n    );\n  }\n  return <span>{name}</span>;\n}\n\nexport function MusicRecommender(): JSX.Element {\n  function getRandomMusic(): [string, boolean] {\n    const idx = randomInt(listOfBands.length + listOfAotY.length);\n    if (idx < listOfAotY.length) {\n      return [listOfAotY[idx], true];\n    }\n    return [listOfBands[idx - listOfAotY.length], false];\n  }\n\n  const [rec, setRec] = useState<[string, boolean]>(getRandomMusic());\n\n  const handleButtonClick = () => {\n    setRec(getRandomMusic());\n  };\n\n  return (\n    <Widget className=\"music-recommender\" title=\"You should listen to...\">\n      <p>\n        <MusicName music={rec} />\n      </p>\n      <button onClick={handleButtonClick}>New Recommendation</button>\n    </Widget>\n  );\n}\n","export const aoty = `2017 AOTY: *Villains* by Queens of the Stone Age\n2018 AOTY: *Little Dark Age* by MGMT\n2019 AOTY: *Morbid Stuff* by PUP\n2020 AOTY: *The New Abnormal* by The Strokes\n2021 AOTY: *Death of a Cheerleader* by Pom Pom Squad`;\n\nexport const bands = `311\n4 Non Blondes\nAC/DC\nThe Aces\nAdriano Celentano\nThe Aggrolites\nAlabama Shakes\nAlain Johannes\nAlexisonfire\nAncient Shapes\nAndrew Stockdale\nThe Animals\nAntarctigo Vespucci\nArctic Monkeys\nAss Ponys\nAstronoid\nAudioslave\nBand of Skulls\nBarenaked Ladies\nThe Baseball Project\nThe Beaches\nBeastie Boys\nBeat Happening\nThe Beatles\nBeck\nBedouin Soundclash\nBen Folds Five\nBetter Oblivion Community Center\nBig Rude Jake\nBig Wreck\nBillie Eilish\nBillie Joe Armstrong\nBilly Idol\nBilly Talent\nBlack Eyed Peas\nThe Black Keys\nBlack Rebel Motorcycle Club\nBlack Sabbath\nBlink-182\nBlood Red Shoes\nBlue Öyster Cult\nBlur\nBob Marley & The Wailers\nBoots Electric\nBØRNS\nBroken Bells\nBroken Social Scene\nBRONCHO\nBros\nBrothers Osborne\nBuddy Holly\nBuffalo Springfield\nThe Byrds\nCage the Elephant\nCake\nCanailles\nCar Seat Headrest\nCharley Crockett\nCheap Trick\nChloe Lilac\nChris Cornell\nChris Stapleton\nChubby Checker\nCity and Colour\nThe Clash\nCookie & The Cupcakes\nCorb Lund\nCosmo Sheldrake\nCounting Crows\nCourage My Love\nCrash Test Dummies\nCreedence Clearwater Revival\nCrosby, Stills, Nash & Young\nDaniel Romano\nDanny Michel\nDarius Rucker\nDavid Bowie\nDavid Newberry\nDávila 666\nThe Deadly Snakes\nThe Dead South\nThe Dead Weather\nDeath Cab for Cutie\nDeath From Above 1979\nThe Decemberists\nDepeche Mode\nThe Desert Sessions\nDevin Cuddy\nDex Romweber Duo\nDispatch\nDirty Heads\nDjango Django\nDolly Parton\nThe Doors\nDropkick Murphys\nDrugdealer\nDuran Duran\nEagles of Death Metal\nEarth, Wind & Fire\nEddie Vedder\nElastica\nElectric Light Orchestra\nEvanescence\nEverclear\nEx Norwegian\nEzra Furman\nThe Faint\nFall Out Boy\nFat Mattress\nFenne Lily\nFine Young Cannibals\nFinger Eleven\nFirst Aid Kit\nThe Flaming Lips\nFlat Duo Jets\nThe Flying Eyes\nThe Flys\nFoo Fighters\nForeigner\nFoster the People\nFrank Carter & The Rattlesnakes\nFranz Ferdinand\nThe Fratellis\nFunkadelic\nGang of Youths\nGangstagrass\nGenesis\nGeorge Ezra\nGeorge Harrison\nGood Charlotte\nGorillaz\nThe Grasping Straws\nGreat Big Sea\nGreta Van Fleet\nGreen Day\nGuns N Roses\nHAIM\nHank Snow\nHank Williams\nHarvey Danger\nHermano\nThe Highwaymen\nHollerado\nHootie & The Blowfish\nHot Hot Heat\nHoundmouth\nHowlin' Wolf\nIan Tyson\nIlluminati Hotties\nImaginary Cities\nInterpol\nThe Interrupters\nJack Broadbent\nJackets\nJack White\nJake Bugg\nJames Carothers\nJapandroids\nJimi Hendrix\nJoe Bataan\nJoe Strummer\nJohn Denver\nJohn Frusciante\nJohn K. Samson\nJohn Lee Hooker\nJohnny Cash\nThe John Spencer Blues Explosion\nJonathan Richman\nJonathan Richman & The Modern Lovers\nJoy Division\nJuly Talk\nJunior Kimbrough\nJustice\nk-os\nKacey Musgraves\nKaiser Chiefs\nKALEO\nKashmere Stage Band\nKiss\nThe Knitters\nKris Kristofferson\nKRS-One\nKy-Mani Marley\nKyuss\nLady A\nLCD Soundsystem\nLead Belly\nLed Zeppelin\nLemon Bucket Orkestra\nLetters to Cleo\nLindy Vopnfjord\nLondon Posse\nLos Lobos\nLowest of the Low\nLuke Combs\nLuke Doucet\nLuke Doucet and the White Falcon\nThe Lumineers\nLynyrd Skynyrd\nMac DeMarco\nThe Mamas & The Papas\nMåneskin\nMarcy Playground\nMars Red Sky\nMatchbox Twenty\nMatisyahu\nMatthews' Southern Comfort\nMatt Mays\nMaximo Park\nMaxine Nightingale\nMeat Puppets\nThe Mescaleros\nMetallica\nMetric\nMGMT\nM.I.A.\nThe Mighty Mighty Bosstones\nMississippi Sheiks\nModern Baseball\nThe Modern Lovers\nModest Mouse\nMONOWHALES\nMonster Truck\nMother Mother\nMotörhead\nMoxy Früvous\nMumford & Sons\nMungo Jerry\nMuse\nNathaniel Rateliff\nNebula\nNeil Young\nThe New Pornographers\nNirvana\nNoel Redding\nNQ Arbuckle\nOasis\nThe Offspring\nOf Monsters and Men\nOlivia Rodrigo\nOperation Ivy\nOrville Peck\nPassion Pit\nPaul McCartney\nPaul Simon\nThe Payolas\nPearl Jam\nPeter Gabriel\nPhil Collins\nPhoebe Bridgers\nPink Floyd\nPinkshift\nPom Pom Squad\nThe Postal Service\nThe Presidents of the United States of America\nPrince\nPUP\nQueen\nQueens of the Stone Age\nQuest for Fire\nThe Raconteurs\nRadio Moscow\nRage Against the Machine\nRamones\nRancid\nRatatat\nRed Hot Chili Peppers\nThe Red Jumpsuit Apparatus\nThe Reklaws\nR.E.M.\nRobert Johnson\nRodriguez\nThe Rolling Stones\nRoyal Blood\nRun-D.M.C.\nThe Rural Alberta Advantage\nRush\nThe Sadies\nThe Salads\nSam Coffey and The Iron Lungs\nSam Cooke\nSantigold\nSave Ferris\nSchool of Seven Bells\nSebastien Grainger & The Mountains\nSecret Machines\nSemisonic\nShannon Lyon\nThe Sheepdogs\nSheer Mag\nSilversun Pickups\nSimon and Garfunkel\nSister Rosetta Tharpe\nSloan\nSlothrust\nSly & The Family Stone\nThe Smashing Pumpkins\nThe Smiths\nSnow Patrol\nSoccer Mommy\nThe Soft Boys\nSon Volt\nSoundgarden\nThe Sounds\nSpacehog\nThe Specials\nSpirit of the West\nSquirrel Nut Zippers\nThe Stanley Brothers\nStan Rogers\nStevie Wonder\nStompin' Tom Connors\nStone Temple Pilots\nThe Strokes\nThe Strumbellas\nSturgill Simpson\nSt. Vincent\nSublime\nSuperorganism\nTalking Heads\nTegan and Sara\nTelevision\nTexas King\nThem Crooked Vultures\nThird Eye Blind\nThornley\nTigers Jaw\nTim Armstrong\nTim Timebomb\nTom Rosenthal\nTop Nachos\nTownes Van Zandt\nThe Tragically Hip\nTransplants\nThe Trews\nT. Rex\nUncle Acid & The Deadbeats\nUncle Tupelo\nUnion Duke\nVan Halen\nThe Vaselines\nThe Velvet Underground\nVicente Fernández\nViolent Soho\nThe Weakerthans\nWednesday\nWeezer\nWeyes Blood\nThe White Stripes\nThe Who\nWilco\nWilliam Prince\nWillie Nelson\nWolfmother\nX\nThe Yardbirds\nYola\nZZ Top`;\n","export function randomInt(cap: number): number {\n  return Math.floor(Math.random() * cap);\n}\n","import React from 'react';\nimport { Widget } from './Widget';\n\nexport const Covid19Update = (): JSX.Element => (\n  <Widget className=\"covid19-update\" title=\"Ontario COVID-19 Update\">\n    <p>\n      <a href=\"https://globalnews.ca/news/6649164/canada-coronavirus-cases/#ontario\">Global News</a>\n      <br />\n      <a href=\"https://www.ctvnews.ca/health/coronavirus/tracking-every-case-of-covid-19-in-canada-1.4852102#ontario\">\n        CTV News\n      </a>\n      <br />\n      <a href=\"https://covid-19.ontario.ca/data\">Government of Ontario</a>\n    </p>\n  </Widget>\n);\n","import React, { useState } from 'react';\nimport { Widget } from './Widget';\n\nexport function FilePathConverter(): JSX.Element {\n  const [unixPath, setUnixPath] = useState('');\n  const [windowsPath, setWindowsPath] = useState('');\n  const windowsCDrive = 'C:';\n  const unixCDrive = '/c';\n  const inputSize = 50;\n\n  const unixToWindows = (path: string): string => {\n    let ret = path.slice(0, 2) === unixCDrive ? windowsCDrive + path.slice(2) : path;\n    ret = ret.replace(/\\//gu, '\\\\');\n    return ret;\n  };\n\n  const windowstoUnix = (path: string): string => {\n    let ret = path.slice(0, 2) === windowsCDrive ? unixCDrive + path.slice(2) : path;\n    ret = ret.replace(/\\\\/gu, '/');\n    return ret;\n  };\n\n  const handleUnixChange = (e: React.FormEvent<HTMLInputElement>) => {\n    setUnixPath(e.currentTarget.value);\n    setWindowsPath(unixToWindows(e.currentTarget.value));\n  };\n\n  const handleWindowsChange = (e: React.FormEvent<HTMLInputElement>) => {\n    setWindowsPath(e.currentTarget.value);\n    setUnixPath(windowstoUnix(e.currentTarget.value));\n  };\n\n  return (\n    <Widget className=\"file-path-converter\" title=\"File Path Converter\">\n      <table>\n        <tbody>\n          <tr>\n            <td>\n              <label htmlFor=\"unix\">UNIX:</label>\n            </td>\n            <td>\n              <input\n                type=\"text\"\n                id=\"unix-path-input\"\n                name=\"unix\"\n                value={unixPath}\n                onChange={handleUnixChange}\n                size={inputSize}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <label htmlFor=\"windows\">Windows:</label>\n            </td>\n            <td>\n              <input\n                type=\"text\"\n                id=\"windows-path-input\"\n                name=\"windows\"\n                value={windowsPath}\n                onChange={handleWindowsChange}\n                size={inputSize}\n              />\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </Widget>\n  );\n}\n","import React from 'react';\nimport { Widget } from './Widget';\n\nexport function SportsSchedule(): JSX.Element {\n  return (\n    <Widget className=\"sports-schedule\" title=\"Sports Schedule\">\n      <p>\n        <a href=\"https://josephwinters.com/sports-schedule/?MLB_TOR=Royal&NHL_TOR=Navy&NBA_TOR=Purple&MLB_NYM=Orange&NFL_BUF=Red\">\n          Jays, Leafs, Raptors, Mets, Bills\n        </a>\n      </p>\n      <p>\n        <a href=\"https://motorsport-events.netlify.app/\">Upcoming motorsports events</a>\n      </p>\n    </Widget>\n  );\n}\n","import React from 'react';\nimport { Widget } from './Widget';\n\nexport function TimeWasters(): JSX.Element {\n  return (\n    <Widget className=\"time-wasters\" title=\"Time Wasters\">\n      <p>\n        <a href=\"https://josephwinters.com/jothello/\">Jothello</a>\n        <br />\n        <a href=\"https://www.coolmathgames.com/0-merge-rings\">Merge Rings</a>\n        <br />\n        <a href=\"https://www.coolmathgames.com/0-swing-monkey\">Swing Monkey</a>\n        <br />\n        <a href=\"https://www.coolmathgames.com/0-treasure-slide\">Treasure Slide</a>\n        <br />\n        <a href=\"https://www.coolmathgames.com/0-mini-metro-london\">Mini Metro: London</a>\n        <br />\n        <a href=\"https://qntm.org/files/wordle/index.html\">Absurdle</a>\n      </p>\n    </Widget>\n  );\n}\n","import React from 'react';\nimport { MusicRecommender } from './MusicRecommender';\nimport { Covid19Update } from './Covid19Update';\nimport { FilePathConverter } from './FilePathConverter';\nimport { SportsSchedule } from './SportsSchedule';\nimport { TimeWasters } from './TimeWasters';\n\nfunction App(): JSX.Element {\n  return (\n    <div className=\"app\">\n      <MusicRecommender />\n      <Covid19Update />\n      <SportsSchedule />\n      <TimeWasters />\n      <FilePathConverter />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}